version: '3.8'

services:
  weather-iot:
    build: .
    container_name: weather-iot-server
    restart: unless-stopped
    ports:
      - "6065:6065"  # Map host 6065 to container 6065
    volumes:
      - weather_data:/app/data
      - ./logs:/app/logs
    environment:
      - NODE_ENV=production
      - PORT=6065
      - DB_PATH=/app/data/weather_data.db
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:6065/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - weather-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: weather-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro  # For HTTPS certificates
    depends_on:
      weather-iot:
        condition: service_healthy
    networks:
      - weather-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  weather_data:
    driver: local

networks:
  weather-network:
    driver: bridge